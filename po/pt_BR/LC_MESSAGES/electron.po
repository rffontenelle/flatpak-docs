# Brazilian Portuguese translation for electron
# Copyright (C) 2017, 2018, Flatpak Team. Licensed under Creative Commons
# Attribution 4.0 International License.
# This file is distributed under the same license as the Flatpak package.
# Rafael Fontenelle <rafaelff@gnome.org>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Flatpak \n"
"Report-Msgid-Bugs-To: https://github.com/flatpak/flatpak-docs/issues\n"
"POT-Creation-Date: 2019-12-01 20:18-0300\n"
"PO-Revision-Date: 2019-12-01 20:20-0300\n"
"Last-Translator: Rafael Fontenelle <rafaelff@gnome.org>\n"
"Language: pt_BR\n"
"Language-Team: Brazilian Portuguese <gnome-pt_br-list@gnome.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"X-Generator: Gtranslator 3.32.0\n"

#: ../../electron.rst:2
msgid "Electron"
msgstr "Electron"

#: ../../electron.rst:4
msgid ""
"Due to the nature of Electron, building Electron applications as Flatpaks "
"requires a few extra steps compared with other applications. Thankfully, "
"several tools and resources are available which make this much easier."
msgstr ""
"Devido à natureza do Electron, a criação de aplicativos Electron como "
"Flatpaks requer algumas etapas extras em comparação com outros aplicativos. "
"Felizmente, várias ferramentas e recursos estão disponíveis, o que facilita "
"muito isso."

#: ../../electron.rst:8
msgid ""
"This guide provides information on how building Electron applications "
"differs from other applications. It also includes information on the tooling "
"for building Electron applications and how to use it."
msgstr ""
"Este guia fornece informações sobre como a compilação de aplicativos "
"Electron difere de outros aplicativos. Ele também inclui informações sobre "
"as ferramentas para a compilação de aplicativos Electron e como usá-lo."

#: ../../electron.rst:12
msgid ""
"The guide walks through the `manifest file <https://github.com/flathub/"
"electron-sample-app/blob/master/flatpak/org.flathub.electron-sample-app."
"json>`_ of the `sample Electron Flatpak application <https://github.com/"
"flathub/electron-sample-app>`_. Before you start, it is a good idea to take "
"a look at this, either online or by downloading the application."
msgstr ""
"O guia percorre o `arquivo de manifesto <https://github.com/flathub/electron-"
"sample-app/blob/master/flatpak/org.flathub.electron-sample-app.json>`_ do "
"`aplicativo de amostra Electron de Flatpak <https://github.com/flathub/"
"electron-sample-app>`_. Antes de começar, é uma boa ideia dar uma olhada "
"nisso, online ou baixando o aplicativo."

#: ../../electron.rst:21
msgid "Building the sample application"
msgstr "Compilando o aplicativo de amostra"

#: ../../electron.rst:23
msgid ""
"While it isn't strictly necessary, you might want to try building and "
"running the sample application yourself."
msgstr ""
"Embora não seja estritamente necessário, convém tentar compilar e executar o "
"aplicativo de amostra."

#: ../../electron.rst:26
msgid ""
"To get setup for the build, download or clone the sample app from GitHub, "
"and navigate to the ``/flatpak`` directory in the terminal. You must also "
"install the Electron base app::"
msgstr ""
"Para obter a configuração para a compilação, baixe ou clone o aplicativo de "
"exemplo no GitHub e navegue até o diretório ``/flatpak`` no terminal. Você "
"também deve instalar o aplicativo base do Electron::"

#: ../../electron.rst:32
msgid "Then you can run the build::"
msgstr "Então, você pode executar a compilação::"

#: ../../electron.rst:36
msgid "Finally, the application can be run with::"
msgstr "Finalmente, o aplicativo pode ser executado com::"

#: ../../electron.rst:41
msgid "Basic configuration"
msgstr "Configuração básica"

#: ../../electron.rst:43
msgid ""
"The first part of the sample application's manifest specifies the "
"application's ID. It also configures the runtime and SDK:"
msgstr ""
"A primeira parte do manifesto do aplicativo de amostra especifica o ID do "
"aplicativo. Ele também configura o runtime e o SDK:"

#: ../../electron.rst:56
msgid ""
"The Freedesktop runtime is generally the best runtime to use with Electron "
"applications, since it is the most minimal runtime, and other dependencies "
"will be specific to Electron itself."
msgstr ""
"O runtime do Freedesktop é geralmente o melhor runtime para uso com "
"aplicativos Electron, já que ele é o mais mínimo de todos e outras "
"dependências serão específicas do próprio Electron."

#: ../../electron.rst:61
msgid "The Electron base app"
msgstr "O aplicativo base Electron"

#: ../../electron.rst:63
msgid ""
"Next, the manifest specifies that the Electron base app should be used, by "
"specifying the ``base`` and ``base-version`` properties in the application "
"manifest::"
msgstr ""
"Em seguida, o manifesto especifica que o aplicativo base Electron deve ser "
"usado, especificando as propriedades ``base`` e ``base-version`` no "
"manifesto do aplicativo::"

#: ../../electron.rst:70
msgid ""
"Base apps are described in :doc:`dependencies`.  Using the Electron base app "
"is much faster and more convenient than manually building Electron and its "
"dependencies. It also has the advantage of reducing the amount of "
"duplication on users' machines, since it means that Electron is only saved "
"once on disk."
msgstr ""
"Os aplicativos base estão descritos em :doc:`dependencies`. Usar o "
"aplicativo base Electron é muito mais rápido e conveniente do que compilar "
"manualmente o Electron e suas dependências. Ele também tem a vantagem de "
"reduzir a quantidade de duplicação nas máquinas dos usuários, pois significa "
"que o Electron é salvo apenas uma vez no disco."

#: ../../electron.rst:75
msgid ""
"Note that this base app is for projects using Electron 1.x.x, the most "
"common version at the time of writing. Electron 2.x.x applications should "
"use ``org.electronjs.Electron2.BaseApp`` instead."
msgstr ""
"Observe que este aplicativo base é para projetos que usam o Electron 1.x.x, "
"a versão mais comum no momento em que este foi escrito. Os aplicativos "
"Electron 2.x.x devem usar ``org.electronjs.Electron2.BaseApp``."

#: ../../electron.rst:80
msgid "Command"
msgstr "Command"

#: ../../electron.rst:82
msgid ""
"The ``command`` property indicates that a script called ``run.sh`` is to be "
"executed to run the application. This will be explained in further detail "
"later."
msgstr ""
"A propriedade ``command`` indica que um script chamado ``run.sh`` deve ser "
"executado para executar o aplicativo. Isso será explicado em mais detalhes "
"posteriormente."

#: ../../electron.rst:93
msgid "Sandbox permissions"
msgstr "Permissões de sandbox"

#: ../../electron.rst:95
msgid ""
"The standard guidelines on sandbox permissions apply to Electron "
"applications. However, Electron does not currently support Wayland, so for "
"display access, only X11 should be used. The sample app also configures "
"pulseaudio for sound and enables network access:"
msgstr ""
"As diretrizes padrão sobre permissões de sandbox se aplicam aos aplicativos "
"Electron. No entanto, o Electron atualmente não possui suporte a Wayland, "
"portanto, para acesso à exibição, apenas o X11 deve ser usado. O aplicativo "
"de amostra também configura o pulseaudio para som e permite o acesso à rede:"

#: ../../electron.rst:112
msgid "Build options"
msgstr "Opções de compilação"

#: ../../electron.rst:114
msgid ""
"These build options aren't strictly necessary, but can be useful if "
"something goes wrong. ``env`` allows setting an array of environment "
"variables, in this case we set ``NPM_CONFIG_LOGLEVEL`` to ``info`` so that "
"``npm`` gives us more detailed error messages."
msgstr ""
"Essas opções de compilação não são estritamente necessárias, mas podem ser "
"úteis se algo der errado. ``env`` permite definir uma matriz de variáveis de "
"ambiente; nesse caso, definimos ``NPM_CONFIG_LOGLEVEL`` para ``info``, para "
"que ``npm`` nos forneça mensagens de erro mais detalhadas."

#: ../../electron.rst:133
msgid "Building Node.js"
msgstr "Compilando Node.js"

#: ../../electron.rst:135
msgid ""
"The next part of the manifest is the modules list. The Electron base app "
"does not include Node.js, so it is necessary to build Node.js as a module. "
"This tutorial builds Node.js 8.11.1, as this version works with most "
"projects at the time of writing, but make sure to use whichever version is "
"best for your project."
msgstr ""
"A próxima parte do manifesto é a lista de módulos. O aplicativo base "
"Electron não inclui o Node.js, portanto, é necessário criar o Node.js como "
"um módulo. Este tutorial cria o Node.js 8.11.1, pois esta versão funciona "
"com a maioria dos projetos no momento da escrita, mas certifique-se de usar "
"a versão que for melhor para o seu projeto."

#: ../../electron.rst:163
msgid ""
"Here, the cleanup step isn't strictly necessary. However, removing "
"documentation helps to reduce final disk size of the bundle."
msgstr ""
"Aqui, a etapa de limpeza não é estritamente necessária. No entanto, a "
"remoção da documentação ajuda a reduzir o tamanho final do disco do pacote."

#: ../../electron.rst:167
msgid "The application module"
msgstr "O módulo do aplicativo"

#: ../../electron.rst:169
msgid ""
"The final section of the manifest defines how the application module should "
"be built. This is where some of the additional logic for Electron and Node."
"js can be found."
msgstr ""
"A seção final do manifesto define como o módulo do aplicativo deve ser "
"compilado. É aqui que algumas das lógicas adicionais para Electron e Node.js "
"podem ser encontradas."

#: ../../electron.rst:184
msgid ""
"By default, ``flatpak-builder`` doesn't allow build tools to access the "
"network. This means that tools which rely on downloading sources will not "
"work. Therefore, Node.js packages must be downloaded prior to running the "
"build. Setting the  ``electron_config_cache`` environment variable means "
"that these will be found when it comes to the build."
msgstr ""
"Por padrão, o ``flatpak-builder`` não permite que ferramentas de compilação "
"acessem a rede. Isso significa que as ferramentas que dependem do download "
"de fontes não funcionarão. Portanto, os pacotes Node.js devem ser baixados "
"antes da execução da compilação. Definir a variável de ambiente "
"``electron_config_cache`` significa que elas serão encontradas quando se "
"trata da compilação."

#: ../../electron.rst:190
msgid ""
"The next part of the manifest describes how the application should be built. "
"The simple buildsystem option is used, which allows a sequence of commands "
"to be specified, which are used for the build. The download location and "
"hash of the application are also specified."
msgstr ""
"A próxima parte do manifesto descreve como o aplicativo deve ser criado. A "
"opção ``buildsystem`` definida com ``simple`` é usada, o que permite que uma "
"sequência de comandos seja especificada, que são usados para a compilação. O "
"local do download e o hash do aplicativo também são especificados."

#: ../../electron.rst:210
msgid "Bundling NPM packages"
msgstr "Empacotando pacotes NPM"

#: ../../electron.rst:212
msgid "The next line is how NPM modules get bundled as part of Flatpaks:"
msgstr ""
"A próxima linha é como os módulos NPM são empacotados como parte de Flatpaks:"

#: ../../electron.rst:220
msgid ""
"Since even simple Node.js applications depend on dozens of packages, it "
"would be impractical to specify all of them as part of a manifest file. A "
"`Python script <https://github.com/flatpak/flatpak-builder-tools/tree/master/"
"npm>`__ has therefore been developed to download Node.js packages with NPM "
"and include them in an application's sources."
msgstr ""
"Como até mesmo aplicativos simples do Node.js dependem de dezenas de "
"pacotes, seria impraticável especificar todos eles como parte de um arquivo "
"de manifesto. Um script em Python <https://github.com/flatpak/flatpak-"
"builder-tools/tree/master/npm>`__ foi, portanto, desenvolvido para baixar "
"pacotes Node.js com o NPM e incluí-los nas fontes de um aplicativo."

#: ../../electron.rst:226
msgid ""
"The Python NPM script requires a ``package-lock.json`` file. This contains "
"information about the packages that an application depends on, and can be "
"generated by running ``npm install --package-lock-only`` from an "
"application's root directory (the sample example contains a ``package-lock."
"json``, for reference). The script is then run as follows::"
msgstr ""
"O script Python de NPM requer um arquivo ``package-lock.json``. Este contém "
"informações sobre os pacotes dos quais um aplicativo depende e pode ser "
"gerado executando ``npm install --package-lock-only`` no diretório raiz de "
"um aplicativo (o exemplo da amostra contém um ``package-lock.json``, para "
"referência). O script é então executado da seguinte maneira::"

#: ../../electron.rst:234
msgid ""
"This generates the manifest JSON needed to build the NPM packages for the "
"application, which are outputted to a file called ``generated-sources."
"json``. The content of this file can be copied to the application's manifest "
"but, because it is often very long, it is often best to link to it from the "
"main manifest, which is done by adding ``generated-source.json`` as a line "
"in the manifest section, as seen above."
msgstr ""
"Isso gera o manifesto JSON necessário para compilar os pacotes NPM para o "
"aplicativo, que são gerados em um arquivo chamado ``generate-sources.json``. "
"O conteúdo desse arquivo pode ser copiado para o manifesto do aplicativo, "
"mas, como geralmente é muito longo, é melhor vinculá-lo a partir do "
"manifesto principal, o que é feito adicionando ``generate-source.json`` como "
"um linha na seção do manifesto, como visto acima."

#: ../../electron.rst:242
msgid "Launching the app"
msgstr "Iniciando o aplicativo"

#: ../../electron.rst:244
msgid ""
"The Electron app is run through a simple script. This can be given any name "
"but must be specified in the manifest's ``\"command\":`` property. See below "
"a sample wrapper for launching app:"
msgstr ""
"O aplicativo Electron é executado através de um script simples. Isso pode "
"receber qualquer nome, mas deve ser especificado na propriedade ``\"command"
"\":`` do manifesto. Veja abaixo um exemplo de wrapper para iniciar um "
"aplicativo:"

#: ../../electron.rst:257
msgid "Build commands"
msgstr "Comandos de compilação"

#: ../../electron.rst:259
msgid ""
"Last but not least, since the simple build option is being used, a list of "
"build commands must be provided. As can be seen, ``npm`` is run with the ``--"
"offline`` option, installing dependencies from packages that have already "
"been cached. These are copied to ``/app/main/``. Finally the ``run.sh`` "
"script is installed to ``/app/bin/`` so that it will be on ``$PATH``:"
msgstr ""
"Por último, mas não menos importante, como a opção de compilação ``simple`` "
"está sendo usada, uma lista de comandos de compilação deve ser fornecida. "
"Como pode ser visto, ``npm`` é executado com a opção ``--offline``, "
"instalando dependências de pacotes que já foram armazenados em cache. Estes "
"são copiados para ``/app/main/``. Finalmente, o script ``run.sh`` é "
"instalado em ``/app/bin/`` para que ele esteja em ``$PATH``:"
